package wolfgoatcabbageGUI;

import java.awt.BorderLayout;
import java.awt.Color;
import java.awt.FlowLayout;
import java.awt.GridLayout;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;

import javax.swing.BorderFactory;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JButton;
import javax.swing.SwingConstants;
import javax.swing.Timer;

public class GUI implements ActionListener{
	private JLabel label;
	private JFrame mainFrame;
	private JPanel mainPanel;
	
	private JFrame resignFrame;
	private JPanel panel1;
	
	private JLabel timerLabel;
	private Timer timer;
	private int secondsPassed;
	
	private JPanel hallOfFamePanel;
	
	public GUI() {
		mainFrame = new JFrame();
		
		JButton resignButton = new JButton("Resign");
		resignButton.addActionListener(new ActionListener() {
			@Override
			public void actionPerformed(ActionEvent e) {
			Resignation();
			}
		});
		
		
		mainPanel = new JPanel();
		mainPanel.setBorder(BorderFactory.createEmptyBorder(100, 100, 100, 100));
		mainPanel.setLayout(new FlowLayout(FlowLayout.RIGHT));
		mainPanel.add(resignButton);
		
		mainFrame.add(mainPanel, BorderLayout.SOUTH);
		mainFrame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
		mainFrame.setTitle("Our GUI");
		mainFrame.pack();
		mainFrame.setVisible(true);
		
		timerLabel = new JLabel("", SwingConstants.CENTER);
		mainFrame.add(timerLabel);
		
		timerLabel.setText("Time Passed: " + secondsPassed);
        timer = new Timer(1000, e -> {
            secondsPassed++;
            timerLabel.setText("Time Passed: " + secondsPassed + " seconds");
        });
        
        startTimer(); // STARTS TIMER ONCE GUI OPENS
	}
	
	public void startTimer() { // METHOD TO START TIMER
		secondsPassed = 0;
		timerLabel.setText("Time Passed: " + secondsPassed);
		timer.start();
	}
	
	public void stopTimer() { // METHOD TO STOP TIMER
		timer.stop();
	}
	
	public void addRecordToHallOfFame(String playerName, int elapsedTime) {
		elapsedTime = secondsPassed;
		JLabel recordLabel = new JLabel(playerName + " - " + elapsedTime);
	    hallOfFamePanel.add(recordLabel);
	    hallOfFamePanel.revalidate(); // Refresh the panel
	    hallOfFamePanel.repaint(); // Repaint the panel
	}
	
	public void Resignation() { // WHEN 'RESIGN' BUTTON IS PRESSED, SEPARATE WINDOW OPENS ASKING FOR CONFIRMATION
		resignFrame = new JFrame();
		
		label = new JLabel("Are you sure you want to give up?"
				, SwingConstants.CENTER);
		JLabel label2 = new JLabel("", SwingConstants.CENTER);
		
		//MIGHT CHANGE COLORS BELOW IF I FIGURE IT OUT
		JButton buttonY = new JButton("Yes");
		buttonY.setBackground(Color.GREEN);
		buttonY.setForeground(Color.WHITE);
		JButton buttonN = new JButton("No");
		buttonN.setBackground(Color.RED);
		buttonN.setForeground(Color.WHITE);
		
		buttonY.addActionListener(new ActionListener() { // 'YES' BUTTON PRESSED, SOLUTION IS GIVEN
			@Override
			public void actionPerformed(ActionEvent e) {
				stopTimer();
				label2.setText("<html>You've resigned. Here's the solution!<br/>"
						+ "1. Take the goat over<br/>"
						+ "2. Return empty-handed<br/>"
						+ "3. Take the wolf or cabbage over<br/>"
						+ "4. Return with the goat<br/>"
						+ "5. Take whichever wasn't taken in step 3 over<br/>"
						+ "6. Return empty-handed<br/>"
						+ "7.Take the goat over</html>");
			}
		});
		
		buttonN.addActionListener(new ActionListener() { // 'NO' BUTTON PRESSED, WINDOW CLOSES, RETURNS TO GAME
			@Override
			public void actionPerformed(ActionEvent e) {
				//frame1.setVisible(false); do i need this orrrrrr can i just get rid of it
				resignFrame.dispose();
			}
		});
		
		panel1 = new JPanel();
		panel1.setBorder(BorderFactory.createEmptyBorder(30, 30, 10, 10));
		panel1.setLayout(new GridLayout(0, 1));
		panel1.add(label);
		panel1.add(buttonY);
		panel1.add(buttonN);
		panel1.add(label2);
		
		resignFrame.add(panel1, BorderLayout.CENTER);
		resignFrame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
		resignFrame.setTitle("Our GUI");
		resignFrame.pack();
		resignFrame.setVisible(true);
	}
	
	
	public static void main(String[] args) {
		new GUI();
	}
}

